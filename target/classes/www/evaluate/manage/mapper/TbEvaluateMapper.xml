<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="www.evaluate.manage.dao.TbEvaluateMapper" >
  <resultMap id="BaseResultMap" type="www.evaluate.manage.pojo.TbEvaluate" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="resid" property="resid" jdbcType="INTEGER" />
    <result column="optionid" property="optionid" jdbcType="INTEGER" />
    <result column="res" property="res" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userid, resid, optionid, res
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="www.evaluate.manage.pojo.TbEvaluateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_evaluate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_evaluate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="www.evaluate.manage.pojo.TbEvaluateExample" >
    delete from tb_evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="www.evaluate.manage.pojo.TbEvaluate" >
    insert into tb_evaluate (id, userid, resid, 
      optionid, res)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{resid,jdbcType=INTEGER}, 
      #{optionid,jdbcType=INTEGER}, #{res,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="www.evaluate.manage.pojo.TbEvaluate" >
    insert into tb_evaluate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="resid != null" >
        resid,
      </if>
      <if test="optionid != null" >
        optionid,
      </if>
      <if test="res != null" >
        res,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="resid != null" >
        #{resid,jdbcType=INTEGER},
      </if>
      <if test="optionid != null" >
        #{optionid,jdbcType=INTEGER},
      </if>
      <if test="res != null" >
        #{res,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="www.evaluate.manage.pojo.TbEvaluateExample" resultType="java.lang.Integer" >
    select count(*) from tb_evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_evaluate
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.resid != null" >
        resid = #{record.resid,jdbcType=INTEGER},
      </if>
      <if test="record.optionid != null" >
        optionid = #{record.optionid,jdbcType=INTEGER},
      </if>
      <if test="record.res != null" >
        res = #{record.res,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_evaluate
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      resid = #{record.resid,jdbcType=INTEGER},
      optionid = #{record.optionid,jdbcType=INTEGER},
      res = #{record.res,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="www.evaluate.manage.pojo.TbEvaluate" >
    update tb_evaluate
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="resid != null" >
        resid = #{resid,jdbcType=INTEGER},
      </if>
      <if test="optionid != null" >
        optionid = #{optionid,jdbcType=INTEGER},
      </if>
      <if test="res != null" >
        res = #{res,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="www.evaluate.manage.pojo.TbEvaluate" >
    update tb_evaluate
    set userid = #{userid,jdbcType=INTEGER},
      resid = #{resid,jdbcType=INTEGER},
      optionid = #{optionid,jdbcType=INTEGER},
      res = #{res,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAll" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from tb_evaluate
  </select>
  <select id="getAllByRes" parameterType="String" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from tb_evaluate where res = #{0}
  </select>
</mapper>